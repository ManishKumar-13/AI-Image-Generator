import React, { useState } from "react";
import { RotatingLines } from "react-loader-spinner";

const API_TOKEN = "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";

function App() {
  const [inputValue, setInputValue] = useState("");
  const [imageUrl, setImageUrl] = useState("");
  const [loader, setLoader] = useState(false);

  const generateImage = async (data) => {
    setLoader(true);
    try {
      const response = await fetch(
        "https://api-inference.huggingface.co/models/prompthero/openjourney-v4",
        {
          headers: { Authorization: `Bearer ${API_TOKEN}` },
          method: "POST",
          body: JSON.stringify({ inputs: data }),
        }
      );
      if (!response.ok) {
        throw new Error("Failed to generate image.");
      }
      const result = await response.blob();
      const image = URL.createObjectURL(result);
      setImageUrl(image);
    } catch (error) {
      console.error(error);
      alert(error.message);
    } finally {
      setLoader(false);
    }
  };

  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-gradient-to-br from-blue-200 via-purple-200 to-pink-200 p-4">
      <div className="w-full max-w-lg p-8 bg-white shadow-2xl rounded-lg">
        <h1 className="text-4xl font-extrabold text-center text-gray-800 mb-8">AI Image Generator</h1>
        <div className="flex flex-col sm:flex-row gap-4 items-center">
          <input
            onChange={(e) => setInputValue(e.target.value)}
            value={inputValue}
            placeholder="Enter a text prompt"
            className="w-full p-4 border-2 border-gray-300 rounded-lg focus:outline-none focus:border-indigo-500 transition duration-300"
            type="text"
          />
          <button
            onClick={() => generateImage(inputValue)}
            className="w-full sm:w-auto bg-indigo-500 text-white px-6 py-3 rounded-lg font-bold hover:bg-indigo-600 transition duration-300"
          >
            Generate
          </button>
        </div>
      </div>
      <div className="mt-10 flex flex-col items-center">
        {loader ? (
          <RotatingLines
            visible={true}
            height="96"
            width="96"
            color="grey"
            strokeWidth="5"
            animationDuration="0.75"
            ariaLabel="rotating-lines-loading"
          />
        ) : imageUrl ? (
          <img
            className="mt-6 w-full max-w-lg rounded-lg shadow-lg transition duration-500"
            src={imageUrl}
            alt="Generated by AI"
          />
        ) : (
          <p className="mt-6 text-gray-700">Enter a prompt to generate an image</p>
        )}
      </div>
    </div>
  );
}

export default App;
